"use strict";(self.webpackChunkaqua_docs_v_2=self.webpackChunkaqua_docs_v_2||[]).push([[7447],{3529:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"protocol/whitepaper","title":"Whitepaper","description":"High level outline of Aqua Protocol (AQP) specification\\n","source":"@site/docs/protocol/whitepaper.md","sourceDirName":"protocol","slug":"/protocol/whitepaper","permalink":"/docs/next/protocol/whitepaper","draft":false,"unlisted":false,"editUrl":"https://github.com/inblockio/docs/protocol/whitepaper.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Whitepaper","linkTitle":"Whitepaper","weight":1,"sidebar_position":2,"description":"High level outline of Aqua Protocol (AQP) specification\\n"},"sidebar":"tutorialSidebar","previous":{"title":"Documentation","permalink":"/docs/next/intro"},"next":{"title":"Identity Protocol","permalink":"/docs/next/protocol/aqua-identity-protocol"}}');var t=i(4848),s=i(8453);const r={title:"Whitepaper",linkTitle:"Whitepaper",weight:1,sidebar_position:2,description:"High level outline of Aqua Protocol (AQP) specification\n"},c=void 0,o={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Terminology",id:"terminology",level:2},{value:"Wallet",id:"wallet",level:2},{value:"Account",id:"account",level:3},{value:"Domain",id:"domain",level:3},{value:"Revision",id:"revision",level:3},{value:"Page",id:"page",level:3},{value:"Transaction Security",id:"transaction-security",level:3},{value:"Data Asset",id:"data-asset",level:3},{value:"Data Vault",id:"data-vault",level:3},{value:"Witness",id:"witness",level:3},{value:"Witness Network",id:"witness-network",level:3},{value:"Portable Hash Chain",id:"portable-hash-chain",level:3},{value:"Immutable Hyperlinks / Transclusions",id:"immutable-hyperlinks--transclusions",level:3},{value:"Specification",id:"specification",level:2},{value:"Verification Hash",id:"verification-hash",level:2},{value:"Content",id:"content",level:2},{value:"Metadata",id:"metadata",level:2},{value:"Signature",id:"signature",level:2},{value:"Witness",id:"witness-1",level:2},{value:"Example",id:"example",level:2},{value:"1st Revision",id:"1st-revision",level:3},{value:"2nd Revision",id:"2nd-revision",level:3},{value:"3rd Revision",id:"3rd-revision",level:3},{value:"Get Hash Chain",id:"get-hash-chain",level:2},{value:"Get Revision Hashes",id:"get-revision-hashes",level:2},{value:"Get Revision",id:"get-revision",level:2},{value:"Aqua Protocol v1.1 Changes",id:"aqua-protocol-v11-changes",level:2},{value:"Data Accounting Protocol v1.2 [TBD]",id:"data-accounting-protocol-v12-tbd",level:2},{value:"Services on AQP (Not yet implemented, exploration)",id:"services-on-aqp-not-yet-implemented-exploration",level:2},{value:"Similar Projects",id:"similar-projects",level:2},{value:"Blockchain Context",id:"blockchain-context",level:2},{value:"A side note",id:"a-side-note",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{}),(0,t.jsx)(n.th,{})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Current version:"}),(0,t.jsx)(n.td,{children:"Aqua Protocol v1.1 Specification"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Author:"}),(0,t.jsx)(n.td,{children:"Tim Bansemer, Publius Dirac"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Date:"}),(0,t.jsx)(n.td,{children:"30.12.2021"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Status:"}),(0,t.jsx)(n.td,{children:"DRAFT / Experimental"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Implementation:"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://github.com/inblockio/micro-pkc",children:"https://github.com/inblockio/micro-pkc"})})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.p,{children:["The Aqua Protocol (AQP) is a data accountability and exchange protocol between\nhosts in peer-to-peer environments. The AQP is used to realize the goal of\n",(0,t.jsx)(n.a,{href:"/docs/next/protocol/data-accounting",children:"accounting for data origin and history"}),". The description\nfor the proof-of-concept implementation of the AQP can be found in ",(0,t.jsx)(n.a,{href:"/docs/next/implementations/reference-architecture",children:"this\npage"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,t.jsx)(n.p,{children:"In today's world, there are no widely adopted trustless processes of checking if\ndata have been manipulated or corrupted, are attributed to the wrong author, or\nare attributed to the wrong time. Today's processes are dependent on centralized\ntrusted services which retain all power over governing the data."}),"\n",(0,t.jsx)(n.p,{children:"There is a lack of transparency or ability to check if data have been altered\nby an unauthorized party. Additionally, consumers of data are incapable of\nverifying if centralized services have altered the data. This leads to a world\nof untrustworthy information in which we don't know how to conclude what is\ntrue."}),"\n",(0,t.jsx)(n.p,{children:"In a world where every piece of information is a grain in a sandstorm, it has\nbecome impossible to navigate reality. In contrast, in a world where every\npiece of information is a fixed star in the sky for a lifetime, we are able to\nrelate and make sense of the information given. The Aqua Protocol (AQP) turns\ngrains of information into fixed stars of information."}),"\n",(0,t.jsx)(n.p,{children:"The AQP adds a peer-to-peer layer of accountability, making it impossible to\nchange data unnoticed. AQP adds an essential line of defense against attacks on\ndata integrity, plagiarism, or misattribution. AQP is used to govern trusted\ndata, which can be quickly verified. This includes the verification of its\nintegrity and history, the verification of its account (the entity who creates\nor manipulates the data), and the verification of its existence and timestamp."}),"\n",(0,t.jsx)(n.p,{children:"The Aqua Protocol provides trustworthiness to data by\nsecuring data \u2705 integrity, \ud83d\udd0f account and \u231a time."}),"\n",(0,t.jsx)(n.p,{children:"In order to account data, it is necessary to track and verify its history. The\nAQP provides a globally unique resource identification (URI) for each revision\nof the verified data. This identifier is collision-free, and is referred the\nsame way across multiple interacting hosts."}),"\n",(0,t.jsx)(n.h2,{id:"terminology",children:"Terminology"}),"\n",(0,t.jsx)(n.h2,{id:"wallet",children:"Wallet"}),"\n",(0,t.jsx)(n.p,{children:"A wallet is a software for protecting and managing private cryptographic keys\n(of private-public key pairs) which are used to govern digital assets. This is\ndone by authorization of transactions via digital signatures or by initiating\ndecryption processes to access data."}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/design-principles#separation-of-account-and-service",children:"Separation of Concerns"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"account",children:"Account"}),"\n",(0,t.jsx)(n.p,{children:"We are following Ethereum's account definition:"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["In general, there are two types of accounts. Externally owned accounts,\ncontrolled by private keys. And contract accounts, controlled by their\ncontract code\n-- ",(0,t.jsx)(n.a,{href:"https://ethereum.org/en/whitepaper/#ethereum-accounts",children:"Ethereum Whitepaper"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["In general, we can't prove if an account owner is a person or a machine. With\nadvancements in AI, it will become increasingly difficult to prove that a human\nis a human. ",(0,t.jsx)(n.a,{href:"https://www.proofofhumanity.id/",children:"Attempts are being made"}),' to\nincrease trustworthiness of accounts which fall short in questions of privacy\nand security as they make public claims. Traditional know your customer (KYC)\ncombined with the AQP and Aqua Identity Protocol (AIP) identification processes\ncan provide similar "proof of being human" which can be attested to an account.\nThis allows us to outsource the problem of identification, where we only focus\non unique accounts which are sufficient for data accounting independent of\nhumans or machines. Identity claims issued via the AIP will help to provide the\ncontext required to meaningfully interact between accounts.']}),"\n",(0,t.jsxs)(n.p,{children:["For more on this topic, please read the ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/aqua-identity-protocol",children:"Aqua Identity\nProtocol"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"domain",children:"Domain"}),"\n",(0,t.jsxs)(n.p,{children:["A domain is a unique namespace attributed to an account. It allows us to manage\nservices and files within that namespace creating a domain of data governance\nAfter granted permissions, additional accounts can be added to share control\nover a domain or singular assets. To enforce boundaries of a domain, additional\nsoftware like the ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/guardian",children:"Guardian"})," is required."]}),"\n",(0,t.jsx)(n.p,{children:"E.g. by setting up the a data vault with your account it becomes your\ndomain of data governance."}),"\n",(0,t.jsx)(n.h3,{id:"revision",children:"Revision"}),"\n",(0,t.jsx)(n.p,{children:"A revision is the smallest portable entity within the AQP. Multiple revisions\nform a single portable hash chain which is serialized in JSON format.\nThey have existed before in unsecured systems where multiple revisions form a\nfile which can be displayed as a page. The AQP adds the cryptographic harness\nto secure it. With presenting a portable hash chain, it is possible to track\nall incremental changes stored in each revision to understand the history of a\npage and how it came to be. This allows us to have version control on digital\nassets being able to restore earlier states and to relate to them. This allows\nus to have historical evidence of digital assets."}),"\n",(0,t.jsx)(n.h3,{id:"page",children:"Page"}),"\n",(0,t.jsx)(n.p,{children:"A page is a visible representation of a file containing multiple or a single\nrevision attributed to a shared origin. A page view could also be used to\ncreate a new revision by a used service which interfaces with the file for\nmanipulation. In AQP all revisions share a global URI hash to\nattribute them together called a genesis hash."}),"\n",(0,t.jsx)(n.h3,{id:"transaction-security",children:"Transaction Security"}),"\n",(0,t.jsx)(n.p,{children:"Transaction security is an economic measure of the level of integrity assurance\nfor a transaction. It is defined as the cost required to forge a transaction.\nThe transaction security can be increased by cryptographic security and by strong\nreplication of transactions. Public distributed ledger systems are highly suitable\nfor providing very high level of transaction security at the cost of privacy\nand immutability (data can't be changed or deleted). Today, public distributed\nledgers such as Bitcoin and Ethereum provide the highest level of transaction\nsecurity."}),"\n",(0,t.jsx)(n.h3,{id:"data-asset",children:"Data Asset"}),"\n",(0,t.jsx)(n.p,{children:"Data turns into a valuable asset if it is accounted for. In an accounted form\nit can be easily priced, exchanged or traded."}),"\n",(0,t.jsx)(n.h3,{id:"data-vault",children:"Data Vault"}),"\n",(0,t.jsx)(n.p,{children:"Software used to store and manage data with an account. The software must apply\na secure architecture and measures for keeping data assets safe. This is\nachieved through encryption, strong authentication and restrictive access to\nkeep data private by default."}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/design-principles#separation-of-account-and-service",children:"Design Principles / Separation of Account and\nService"})]}),"\n",(0,t.jsx)(n.h3,{id:"witness",children:"Witness"}),"\n",(0,t.jsx)(n.p,{children:"We define witnessing as the process of observing an event. A witness is judged\nby their capability to recollect and share an observed event. In other words,\nwitnessing is the process of storing input data for later playback to provide\ndata symmetry around an event."}),"\n",(0,t.jsx)(n.h3,{id:"witness-network",children:"Witness Network"}),"\n",(0,t.jsx)(n.p,{children:"The digital service in a distributed ledger or similar infrastructure which\nprovides transaction security and data symmetry for shared data within the\nnetwork. An example of a witness network would be Ethereum."}),"\n",(0,t.jsx)(n.p,{children:"E.g. Ethereum can be used to store a digital fingerprint of a domain snapshot\nof a data vault. A domain snapshot is the Merklized state of all witnessed hash\nchains being present in the data vault. It is required to pay the witness\nnetwork for its service. In the case of Ethereum, this is done using 'Ether'.\nThis in return allows the account owner to create an 'undeniable' proof that a\nspecific revision and the previous revisions within a hash chain has existed."}),"\n",(0,t.jsx)(n.h3,{id:"portable-hash-chain",children:"Portable Hash Chain"}),"\n",(0,t.jsx)(n.p,{children:"A hash chain is a linked list where each node contains the cryptographic hash\nof the previous node content. A portable hash chain is a hash chain that can be\nmoved from one host to another."}),"\n",(0,t.jsx)(n.h3,{id:"immutable-hyperlinks--transclusions",children:"Immutable Hyperlinks / Transclusions"}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/immutable-hyperlinks",children:"Immutable Hyperlinks"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"specification",children:"Specification"}),"\n",(0,t.jsx)(n.p,{children:"To identify a revision with a unique fingerprint, we hash its content using\nthe SHA3-512 hashing function which always has a 128 characters long\noutput. This value can be used as a checksum to verify data integrity.\nThe checksum can then be entangled in a hash-chain to create an\nimmutable track record. We then calculate multiple properties associated\nwith the revision, in addition to its content checksum. In the next section,\nwe differentiate between REQUIRED and OPTIONAL properties for each\nrevision."}),"\n",(0,t.jsxs)(n.p,{children:["All hashes are based on\n",(0,t.jsx)(n.a,{href:"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf",children:"SHA3-512"}),".\nThis encryption standard is used to construct ",(0,t.jsx)(n.a,{href:"#portable-hash-chain",children:"portable hash\nchains"}),', which are serializing of data and its history in\na form that can be verified, and independent of location. The portable hash\nchain can be fully or partially exchanged between hosts depending on the\napplication of the data. From here on, we refer the term "portable hash chain"\nas "hash chain."']}),"\n",(0,t.jsx)(n.p,{children:"In order to implement the AQP, we need to utilize a software that is capable of\ngenerating portable hash chains and facilitating actions described in the\nAQP. We call those nodes which facilitate the Aqua Protocol 'Aqua Data\nVaults' which given their role should be implemented as a software with secure\narchitecture and measures for keeping data assets safe. This is achieved\nthrough encryption, authentication and restrictive access to keep data private\nby default."}),"\n",(0,t.jsx)(n.h1,{id:"revision-verification-structure",children:"Revision Verification Structure"}),"\n",(0,t.jsx)(n.p,{children:"A revision is RECOMMENDED to be limited to 50 Megabytes to ensure that the verification can take\nplace on all imaginable clients which might have slow network connectivity, low\nmemory, low cpu performance. Once a revision is verified, the next one can be\nverified. Clients with more performance will be able to parallelize the\nverification. Larger files can be chunked to be placed in multiple revisions."}),"\n",(0,t.jsxs)(n.p,{children:["A verified data structure is identified by its URI ",(0,t.jsx)(n.code,{children:"verification_hash"}),"\nand grouped by its ",(0,t.jsx)(n.code,{children:"genesis_hash"}),". The first revision created will\ncreate a ",(0,t.jsx)(n.code,{children:"verification_hash"})," which has a special meaning and is\nreferred to as the ",(0,t.jsx)(n.code,{children:"genesis_hash"}),". All future revisions building upon\nthat first revision will be attributed to the ",(0,t.jsx)(n.code,{children:"genesis_hash"})," as a unique\nURI for grouping the revisions. This allows us to understand if two\nrevisions are related without needing to verify the whole history of the\nhash chain."]}),"\n",(0,t.jsx)(n.h2,{id:"verification-hash",children:"Verification Hash"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"revision_verification_hash"})," is the hash sum over the string formed by the\nfollowing operation"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"revision_verification_hash = calculate_hash_sum(\n    content_hash + metadata_hash +\n    signature_hash + witness_hash\n)\n"})}),"\n",(0,t.jsx)(n.p,{children:"The content_hash and metadata_hash are REQUIRED.\nThe signature_hash and witness_hash are OPTIONAL."}),"\n",(0,t.jsx)(n.h2,{id:"content",children:"Content"}),"\n",(0,t.jsxs)(n.p,{children:["A content hash is the check sum for all content data fields which simplifies\nhash construction and the ability to identify data corruption in this part of\nthe verification structure.\n",(0,t.jsx)(n.code,{children:"content_hash"})," is the hash sum over the string formed by following operation:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'contentObj = {\n    "main": content,\n    "extension_key_1": content_extension_1,\n    "extension_key_2": content_extension_2,\n    ...,\n    "extension_key_n": content_extension_n,\n}\nsortedContenObj = sort_by_keys(contentObj)\ncontent_hash = calculate_hash_sum(\n    sortedContenObjValue_1,\n    sortedContenObjValue_2,\n    ...,\n    sortedContenObjValue_n,\n)\n'})}),"\n",(0,t.jsx)(n.p,{children:"Description:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"content: The string input of the visible page using UTF-8 encoding schema.\nREQUIRED."}),"\n",(0,t.jsx)(n.li,{children:"content extensions: more data MAY be encapsulated in addition to the main\ncontent. These could be a file, a stateful link, or a signature. The content\nextensions are sorted alphabetically by their key names. OPTIONAL."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"sort_by_keys"})," function sorts the content object elements by their keys\nalphabetically. The JSON input MAY be a canonical JSON, in which the keys\norder is already alphabetical, but we sort it always to ensure the order is\ncorrect."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["To see an example of ",(0,t.jsx)(n.code,{children:"contentObj"})," of a revision, see the ",(0,t.jsx)(n.a,{href:"#Example",children:"example"}),"\nsection,"]}),"\n",(0,t.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"metadata_hash = calculate_hash_sum(\n    domain_id + time_stamp + previous_verification_hash\n)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Description:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"metadata_hash: The check sum for all metadata data fields. It simplifies the\nhash construction and the ability to identify data corrupton in this part of\nthe verification structure."}),"\n",(0,t.jsx)(n.li,{children:"domain_id: 10 digits hexadecimal randomly generated to identify the host\nsystem that runs the AQP service."}),"\n",(0,t.jsx)(n.li,{children:"time_stamp: time-stamp of the current revision (decimal numbers\nYYYYMMDDHHMMSS e.g. 20211128092608)."}),"\n",(0,t.jsx)(n.li,{children:"previous_verification_hash: previous_revision_verification_hash if present"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"signature",children:"Signature"}),"\n",(0,t.jsxs)(n.p,{children:["A signature in AQP is a cryptographic signature generated by public-private key\npair. The protocol should be abstract, where it will support 'Method' in later\niterations. This will allow us to use different types of implementations such\nas: PGP signatures, Ethereum, or Bitcoin\n",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Cryptocurrency_wallet",children:"wallet"}),"'s signatures."]}),"\n",(0,t.jsx)(n.p,{children:"In this specification, we use the AQP reference implementation's signing\nmethod, which is via an Ethereum wallet."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"signature_hash = calculate_hash_sum(\n    signature + public_key\n)\n"})}),"\n",(0,t.jsx)(n.p,{children:"The signature is generated by a wallet signing the following message:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'I sign the following page verification_hash:" +[0x<revision_verification_hash>]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"revision_verification_hash"})," MUST NOT be signed twice by the same key, to\navoid information leakage of the private key."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, a wallet with an address of\n",(0,t.jsx)(n.code,{children:"0xa2026582b94feb9124231fbf7b052c39218954c2"})," and a public key of\n",(0,t.jsx)(n.code,{children:"0x041518581af65749b3ddc69889df3e5d229bc8ad79279a07ddeb368ade5e1592368c5ff3b69143d7a1e7cf64f7d0774a6724e6eaf138d318d07ddc30f6081ca89a"}),"\nsigns the following message:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'I sign the following page verification_hash:" +[0x9dab72c7635043452958c4cc2902f48ef7c4ae437058280197c6a2736ab9635f799cbf190d9d07dd76589055a8ad64e61c6bebd1487994207d4cb7918b471f57]\n'})}),"\n",(0,t.jsx)(n.p,{children:"which results in the following signature:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"0x19b5697c4541509c1add3db9fc2f678b7b80325ebffd4d945ca00db5f8b3f98a142edbf9a7faa0a0c7ec4f10ae1b64cf2ea62ce3ee73ed2e37ce916d6bd016601c\n"})}),"\n",(0,t.jsx)(n.h2,{id:"witness-1",children:"Witness"}),"\n",(0,t.jsx)(n.p,{children:"Witnessing allows one to undeniably prove the existence of a dataset\n(represented as a portable hash chain). To complete the witnessing process, a\nDomain Snapshot is created. This is a collection of all revision hashes within\none domain. A Merkle tree is used to unify all hashes of the latest revisions\nof all portable hash chains within a domain into a single hash value."}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"witness_event_verification_hash"})," is written to the ",(0,t.jsx)(n.a,{href:"#witness-network",children:"Witness\nNetwork"}),". The\n",(0,t.jsx)(n.code,{children:"witness_event_verification_hash"})," is then generated by using the\n",(0,t.jsx)(n.code,{children:"domain_snapshot_genesis_hash"})," and the ",(0,t.jsx)(n.code,{children:"merkle_root"})," hash together. This\nallows the page snapshot itself to also be witnessed."]}),"\n",(0,t.jsx)(n.p,{children:"A single revision which has been witnessed, will not store the whole Merkle\ntree, but only its relevant path to the Merkle root. Performing a Merkle proof\nmeans that its revision is included in the Merkle tree."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"witness_hash = calculate_hash_sum(\n    domain_snapshot_genesis_hash + merkle_root +\n    witness_network + witness_event_transaction_hash\n)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Description:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"witness_hash"}),": the checksum for all signature data fields. It simplifies hash\nconstruction and identifies data corruption in this part of the verification\nstructure."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"domain_snapshot_genesis_hash"}),": Refers to the URI of the page which stores the\nwhole Merkle tree of the witness event."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"merkle_root"}),": the root hash of the Merkle tree. The presence of the\nMerkle tree allows for lazy verification to reduce required computational\nsteps for verification by skipping the Merkle proof as both datasets can be\nentangled in the chain by a newer revision and therefore be immutable."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"witness_network"}),": specifies which witness network was used to store the\n",(0,t.jsx)(n.code,{children:"witness_event"}),". The following structure shows an AQP hash chain with 3\nrevisions which wrote the ",(0,t.jsx)(n.code,{children:"witness_event_verification_hash"})," into the\nwitness network."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Additional context:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["relative-merkle-tree-proof: This provide the relative path with all required\nhashes to verify the Merkle tree root from the first node which the\n",(0,t.jsx)(n.code,{children:"verification_hash"})," of the revision as a starting point."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"witness_event_verification_hash"}),": It is calculated by taking the sha3-512\nchecksum of the ",(0,t.jsx)(n.code,{children:"domain_snapshot_genesis_hash"})," and the ",(0,t.jsx)(n.code,{children:"merkle_root"})," hash.\nThis ensures that the",(0,t.jsx)(n.code,{children:"domain_snapshot"})," itself will be witnessed."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:"The following structure shows an AQP hash chain with 3 revisions:"}),"\n",(0,t.jsx)(n.h3,{id:"1st-revision",children:"1st Revision"}),"\n",(0,t.jsx)(n.p,{children:"This revision features all REQUIRED (content, metadata) and all OPTIONAL\n(signature, witness) AQP data fields."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "verification_context": {\n    "has_previous_signature": false,\n    "has_previous_witness": false\n  },\n  "content": {\n    "rev_id": 358,\n    "content": {\n      "main": "First revision text",\n      "transclusion-hashes": ""\n    },\n    "content_hash": "ae188be061822074716b43925b3ffa90a03c530342be73c3440d8f022765ffebbb56c16552f13cd1ea61f876d2d892e0a73dcba5173fc47d371b4251d6c094da"\n  },\n  "metadata": {\n    "domain_id": "acfa9f682e",\n    "time_stamp": "20220116090401",\n    "previous_verification_hash": "",\n    "metadata_hash": "d1025fd8866d9367735d2f6617b3aa87401e08d726f311cdf834ea9540955bfc59b428676bce5d47d5fed381394ab2ed838c5eecfc9cb37313705374752c247d",\n    "verification_hash": "9dab72c7635043452958c4cc2902f48ef7c4ae437058280197c6a2736ab9635f799cbf190d9d07dd76589055a8ad64e61c6bebd1487994207d4cb7918b471f57"\n  },\n  "signature": {\n    "signature": "0x19b5697c4541509c1add3db9fc2f678b7b80325ebffd4d945ca00db5f8b3f98a142edbf9a7faa0a0c7ec4f10ae1b64cf2ea62ce3ee73ed2e37ce916d6bd016601c",\n    "public_key": "0x041518581af65749b3ddc69889df3e5d229bc8ad79279a07ddeb368ade5e1592368c5ff3b69143d7a1e7cf64f7d0774a6724e6eaf138d318d07ddc30f6081ca89a",\n    "wallet_address": "0xa2026582b94feb9124231fbf7b052c39218954c2",\n    "signature_hash": "cc42f40c4452a25f9ea48a97b6dfba6f69dec347db5c1adf25475b0b4a5da36af3fe48bf9f7ea0dda6bbed9367dc9c82834dbf8cc7f6220fd190cdb729d3f4ec"\n  },\n  "witness": {\n    "witness_event_id": "2",\n    "domain_id": "acfa9f682e",\n    "domain_snapshot_title": "Data Accounting:DomainSnapshot:b33afaf53ed3d245f0319d4997db2032de9d77791ae11f5125189815eef44f2fba9633bebe2e57bc5ea4b0424872ed02fa6aa9ad909f467726b536933bf715bf",\n    "witness_hash": "9707780cebcf6ed02b40bd7e6956b35ffe142a2b5f8cee15c703a652fa389eb118ef101e2f463e95663aa4013a42d9f1ce4a83eed3528b02bf98626e7599bbd8",\n    "domain_snapshot_genesis_hash": "b33afaf53ed3d245f0319d4997db2032de9d77791ae11f5125189815eef44f2fba9633bebe2e57bc5ea4b0424872ed02fa6aa9ad909f467726b536933bf715bf",\n    "merkle_root": "14f26d7dc0be77afff9131c03cab39a2fa9e1270c6face3fdc35b9b4b4ac4550d048c356a4713568c42411c3e7fe3553ec7b993c9bd7da97cb976e843d7e4d29",\n    "witness_event_verification_hash": "67e187411f1e514f232ae2858168da29b15ddfd07523e7a7618bfbf91c583f54fe8e850146120539a92a63ce6138f96599fb8a46ed492e428fe6fde9b9ea82ae",\n    "witness_network": "goerli",\n    "smart_contract_address": "0x45f59310ADD88E6d23ca58A0Fa7A55BEE6d2a611",\n    "witness_event_transaction_hash": "0x5900103adc09a789fd3bd7c23dfeff1ffce41dfba0a52b525ecc032e9279eb1f",\n    "sender_account_address": "0xa2026582b94feb9124231fbf7b052c39218954c2",\n    "source": "default",\n    "structured_merkle_proof": [\n      {\n        "witness_event_verification_hash": "67e187411f1e514f232ae2858168da29b15ddfd07523e7a7618bfbf91c583f54fe8e850146120539a92a63ce6138f96599fb8a46ed492e428fe6fde9b9ea82ae",\n        "depth": "4",\n        "left_leaf": "2554fb53531f4de26ff3ad1fb8c61feea6ea47c3f13c4abda385c46ef8541361f7eee42433050281714a3900115f04fe52b5a8d781a71c4c439c5de6b91cbe3c",\n        "right_leaf": "9dab72c7635043452958c4cc2902f48ef7c4ae437058280197c6a2736ab9635f799cbf190d9d07dd76589055a8ad64e61c6bebd1487994207d4cb7918b471f57",\n        "successor": "789e508ccb23fe053b628cebc19a2d32f34e6aa21e878e8611f7c14d891625c7b2e243b3c3105b98295333b9183e5ea272a055a84ab65ad927f7fd9c27aae48e"\n      },\n      {\n        "witness_event_verification_hash": "67e187411f1e514f232ae2858168da29b15ddfd07523e7a7618bfbf91c583f54fe8e850146120539a92a63ce6138f96599fb8a46ed492e428fe6fde9b9ea82ae",\n        "depth": "3",\n        "left_leaf": "789e508ccb23fe053b628cebc19a2d32f34e6aa21e878e8611f7c14d891625c7b2e243b3c3105b98295333b9183e5ea272a055a84ab65ad927f7fd9c27aae48e",\n        "right_leaf": "c16a966333cd22ff3497875a62202874221c1dae2e74b4351d058910f8d37160be480fce9aab4ec5e725beb695509f0fd65ae581568c6f1ae25eb4f1440b287f",\n        "successor": "80d7549af24e9a6bdfc32cefe0536d6528d665cc8e65859ef4cff87270f3db8d9b95aaecc167e10c9b5be9ce3ab36d8d880c3a518e1c5eb899ca9d95af24e9db"\n      },\n      {\n        "witness_event_verification_hash": "67e187411f1e514f232ae2858168da29b15ddfd07523e7a7618bfbf91c583f54fe8e850146120539a92a63ce6138f96599fb8a46ed492e428fe6fde9b9ea82ae",\n        "depth": "2",\n        "left_leaf": "80d7549af24e9a6bdfc32cefe0536d6528d665cc8e65859ef4cff87270f3db8d9b95aaecc167e10c9b5be9ce3ab36d8d880c3a518e1c5eb899ca9d95af24e9db",\n        "right_leaf": "f4e189a08b486253ea0a5cc7bf7150055e738898115c4caf00e45634d6925539d51852409d1fe9108469e9b15668b940f3369300bb27cc292d1fabc0c07cd593",\n        "successor": "e227dd97e5166364483b41f058f0d176e3a50a7510299038b09ae3aef2cbafb26c787afad82563a945b433fa2d1279af3535755235ab69d6e5ab089179177c14"\n      },\n      {\n        "witness_event_verification_hash": "67e187411f1e514f232ae2858168da29b15ddfd07523e7a7618bfbf91c583f54fe8e850146120539a92a63ce6138f96599fb8a46ed492e428fe6fde9b9ea82ae",\n        "depth": "1",\n        "left_leaf": "e227dd97e5166364483b41f058f0d176e3a50a7510299038b09ae3aef2cbafb26c787afad82563a945b433fa2d1279af3535755235ab69d6e5ab089179177c14",\n        "right_leaf": "780f3eb08f24022be4463be141bcda6a33a157cd0fd44cf209312b8427ac4036637a63d239526555128a4e7f4bb588ebfdbd8a8cc7d797038e29b852a4fae26c",\n        "successor": "f3bd4e82b1e3d304005a7ddf4ab940f3e4e1cf099ca1c058454c431ed3feb0674c044e53150eb5691073ba58a3491565f72f6a6c2a24562ea080b569b4496c9f"\n      },\n      {\n        "witness_event_verification_hash": "67e187411f1e514f232ae2858168da29b15ddfd07523e7a7618bfbf91c583f54fe8e850146120539a92a63ce6138f96599fb8a46ed492e428fe6fde9b9ea82ae",\n        "depth": "0",\n        "left_leaf": "f3bd4e82b1e3d304005a7ddf4ab940f3e4e1cf099ca1c058454c431ed3feb0674c044e53150eb5691073ba58a3491565f72f6a6c2a24562ea080b569b4496c9f",\n        "right_leaf": "4a0c120fbdd6219b774eb2cb2076f4050d606b621e384c3ec645be0e5dbcdac3132f1f2acb531fa5ff62429907b77cf8d29a760be3765eb4decd83949a2925f8",\n        "successor": "14f26d7dc0be77afff9131c03cab39a2fa9e1270c6face3fdc35b9b4b4ac4550d048c356a4713568c42411c3e7fe3553ec7b993c9bd7da97cb976e843d7e4d29"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2nd-revision",children:"2nd Revision"}),"\n",(0,t.jsx)(n.p,{children:"This revision entangles all data fields of the previous revision. As the\ncalculation of the revision_verification hash depends on the revision of the\nprevious revision, it is shown in verification_context."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "verification_context": {\n    "has_previous_signature": true,\n    "has_previous_witness": true\n  },\n  "content": {\n    "rev_id": 362,\n    "content": {\n      "main": "First revision text",\n      "signature-slot": "[\\n    {\\n        \\"user\\": \\"0xa2026582b94feb9124231fbf7b052c39218954c2\\",\\n        \\"timestamp\\": \\"20220116090439\\"\\n    }\\n]",\n      "transclusion-hashes": ""\n    },\n    "content_hash": "9732084a45fd344d63687ccf9b5cd942f99ffe1debd11622b05d0cd24a2de3e5608d5f5121bdd7559c0a2d39067f9258c4f9612e44728df2e8d9026a88ed650c"\n  },\n  "metadata": {\n    "domain_id": "acfa9f682e",\n    "time_stamp": "20220116090439",\n    "previous_verification_hash": "9dab72c7635043452958c4cc2902f48ef7c4ae437058280197c6a2736ab9635f799cbf190d9d07dd76589055a8ad64e61c6bebd1487994207d4cb7918b471f57",\n    "metadata_hash": "8df483539e2f81e64c9b9df0c7e13ae7778947b5defef860fbaed1260eade794999839bb254ea5006a5d4b6a89a37980ab576dc546d6336518d65b80bf2a5cb5",\n    "verification_hash": "296347471b33f3d3c69cc6e0699d80b4cb68ffc79c3ecce96beb659fa324fab1de7a888932fbfb7c60bb8cc83c9445ce15532987a7b59440cada649681618293"\n  },\n  "signature": {\n    "signature": "",\n    "public_key": "",\n    "wallet_address": "",\n    "signature_hash": ""\n  },\n  "witness": null\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3rd-revision",children:"3rd Revision"}),"\n",(0,t.jsx)(n.p,{children:"This revision features a transclusion-hash for an immutable link to another\nrevision."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "verification_context": {\n    "has_previous_signature": false,\n    "has_previous_witness": false\n  },\n  "content": {\n    "rev_id": 363,\n    "content": {\n      "main": "First revision text\\n\\n[[File:Logo_inblockio.png]]",\n      "signature-slot": "[\\n    {\\n        \\"user\\": \\"0xa2026582b94feb9124231fbf7b052c39218954c2\\",\\n        \\"timestamp\\": \\"20220116090439\\"\\n    }\\n]",\n      "transclusion-hashes": "[{\\"dbkey\\":\\"Logo_inblockio.png\\",\\"ns\\":6,\\"verification_hash\\":\\"9b2b3cafb90a07433a2b61885a9e64641a99b1e9024cf53b640501d3706b142fed7bc372300973137ef9d92584fac70976c3889d5610abcfe1f187c248263a56\\"}]"\n    },\n    "content_hash": "14b8256ccd5fa1d883983317f92f428eadb52f699f476b9be69f14c6892b41979ff7b5b7a7a978177985d6aaa0bcfd9857a2646aedc4cbb3299373daa647814b"\n  },\n  "metadata": {\n    "domain_id": "acfa9f682e",\n    "time_stamp": "20220116090556",\n    "previous_verification_hash": "296347471b33f3d3c69cc6e0699d80b4cb68ffc79c3ecce96beb659fa324fab1de7a888932fbfb7c60bb8cc83c9445ce15532987a7b59440cada649681618293",\n    "metadata_hash": "09688c05a83bb74bb255fb0c571cb6314b65f5b7f00750547a2c43f4959d4702ae2aec019c6fb4b0e5d23adea87fd456b0eaffc6ae271163a1fa45b4bae54230",\n    "verification_hash": "b35894d74dfcf8b41ff95eed97705e1acf9081021e0d478d8645cb04b8a0b4a013ee8f7fb6e140d149f2c92f20bba984fad5535938a5e36ae6a799a18343b806"\n  },\n  "signature": {\n    "signature": "",\n    "public_key": "",\n    "wallet_address": "",\n    "signature_hash": ""\n  },\n  "witness": null\n}\n'})}),"\n",(0,t.jsx)(n.h1,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,t.jsx)(n.p,{children:"The AQP provides 3 API endpoints which return data from a host that runs the\nAQP:"}),"\n",(0,t.jsx)(n.h2,{id:"get-hash-chain",children:"Get Hash Chain"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"/get_hash_chain_info/{identifier}?identifier=<title or genesis hash>"}),(0,t.jsx)(n.br,{}),"\n","Input:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"identifier_type"}),': the value must either be "title" or "genesis_hash"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"identifier"}),': the title or genesis_hash string, e.g. "Main Page" or "02c3c2...215d8d"\nReturns: all context for the requested hash_chain.']}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsxs)(n.p,{children:["API Request:\n",(0,t.jsx)(n.code,{children:"/get_hash_chain_info/genesis_hash?identifier=dffd37be12adc9e774b51aa712f7c5bfc09f48b083540d8ca55f91f317e8685bf09daf004f7c841e53732b8c7992de3f3b9b79350d13570c3b46803ba5119c26"})]}),"\n",(0,t.jsx)(n.p,{children:"API Response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "genesis_hash": "dffd37be12adc9e774b51aa712f7c5bfc09f48b083540d8ca55f91f317e8685bf09daf004f7c841e53732b8c7992de3f3b9b79350d13570c3b46803ba5119c26",\n  "domain_id": "acfa9f682e",\n  "latest_verification_hash": "2554fb53531f4de26ff3ad1fb8c61feea6ea47c3f13c4abda385c46ef8541361f7eee42433050281714a3900115f04fe52b5a8d781a71c4c439c5de6b91cbe3c",\n  "site_info": {\n    "sitename": "Personal Knowledge Container",\n    "dbname": "my_wiki",\n    "base": "http://localhost:9352/index.php/Aqua",\n    "generator": "MediaWiki 1.37.1",\n    "case": "first-letter",\n    "namespaces": {\n      "0": {\n        "case": true,\n        "title": ""\n      },\n     "6942": {\n        "case": true,\n        "title": "Data Accounting"\n      }\n    },\n    "version": "0.3.0"\n  },\n  "title": "Aqua",\n  "namespace": 0,\n  "chain_height": 3\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"get-revision-hashes",children:"Get Revision Hashes"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"/get_revision_hashes/{verification_hash}"}),"\nInput:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"verification_hash"}),"\nReturns: the revision requested if it exists and/or a list of any newer\nrevision than the one requested."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsxs)(n.p,{children:["API Request:\n",(0,t.jsx)(n.code,{children:"/get_revision_hashes/dffd37be12adc9e774b51aa712f7c5bfc09f48b083540d8ca55f91f317e8685bf09daf004f7c841e53732b8c7992de3f3b9b79350d13570c3b46803ba5119c26"})]}),"\n",(0,t.jsx)(n.p,{children:"API Response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  "dffd37be12adc9e774b51aa712f7c5bfc09f48b083540d8ca55f91f317e8685bf09daf004f7c841e53732b8c7992de3f3b9b79350d13570c3b46803ba5119c26",\n  "f483d7746f67e7099099bcfa8ea5a93148251c598857e8fad21ce842da62794467067802ef9e818d240cd3312a3346a769f363145a87bfc1eeae19fe8d21b328",\n  "2554fb53531f4de26ff3ad1fb8c61feea6ea47c3f13c4abda385c46ef8541361f7eee42433050281714a3900115f04fe52b5a8d781a71c4c439c5de6b91cbe3c"\n]\n'})}),"\n",(0,t.jsx)(n.h2,{id:"get-revision",children:"Get Revision"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"/get_revision/{verification_hash}"}),"\nInput:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"verification_hash"}),"\nReturns: the revision content together with its verification data"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example: See example above."}),"\n",(0,t.jsxs)(n.p,{children:["API Request: ",(0,t.jsx)(n.code,{children:"/get_revision/dffd37be12adc9e774b51aa712f7c5bfc09f48b083540d8ca55f91f317e8685bf09daf004f7c841e53732b8c7992de3f3b9b79350d13570c3b46803ba5119c26"})]}),"\n",(0,t.jsx)(n.h1,{id:"verification-process",children:"Verification Process"}),"\n",(0,t.jsx)(n.p,{children:"The verification process is a redo of the verification data generation\nprocess, and additionally a comparison of their results."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Verification of Content"})}),"\n",(0,t.jsx)(n.p,{children:"All hashes are recalculated in a separate client implementation, and\ncompared with the ones sent via the API. If the data was not altered or\ncorrupted; nor was there a difference in the process to calculate the\nhash, they will match. This will create a high level of assurance that\nthe integrity and history of the portable hash chain in question has not been\naltered."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Verification of Account"})}),"\n",(0,t.jsx)(n.p,{children:"We cryptographically verify that the revision signature is indeed generated by the account specified in the verification data."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Verification of Time"})}),"\n",(0,t.jsxs)(n.p,{children:["To verify that the witness event included in a revision is correct, a\nlookup and comparison of the ",(0,t.jsx)(n.code,{children:"witness_event_verification_hash"})," on-chain is\nperformed and compared with the recalculated event."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Reference Implementation"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{}),(0,t.jsx)(n.th,{})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Command-Line-Verification-Tool"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://github.com/inblockio/aqua-verifier-js",children:"https://github.com/inblockio/aqua-verifier-js"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Chrome Extension Verification Tool"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://github.com/inblockio/aqua-verifier-webextension",children:"https://github.com/inblockio/aqua-verifier-webextension"})})]})]})]}),"\n",(0,t.jsx)(n.h1,{id:"appendix",children:"Appendix"}),"\n",(0,t.jsx)(n.p,{children:"The following content is informational and not part of the\nspecification. It should help to better understand utility, context and\nservices which can be built on top of AQP."}),"\n",(0,t.jsx)(n.h2,{id:"aqua-protocol-v11-changes",children:"Aqua Protocol v1.1 Changes"}),"\n",(0,t.jsx)(n.p,{children:"Moving over to revision based verification. This allows:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Bulk / in parallel verification; ensuring logarithmic verification\ntimes, not linear increasing verification times with longer history.\nIn short: Much faster and scalable."}),"\n",(0,t.jsxs)(n.li,{children:["Single revision and range verification (you want to verify a\nspecific part of the content-chain)","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This is useful for verification of identity claims, where\ntrusted parties have signed the claim and for the validator it's\nsufficient to see that signature."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["This allows direct verification after every edit via the Guardian.\nThis is the preparation in the interaction to provide services\nthrough the ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/guardian",children:"Guardian"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Changing the design to include transclusions e.g. this allows the\nverification of subpages via their stateful links /\nrevision_verification_hashes","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This also allows the inclusion of media files in the\nverification process"}),"\n",(0,t.jsx)(n.li,{children:"You can upload pictures, PDF's, Word-Documents and have them\nautomatically included in the aqua protocol and therefore in the\nverified data-structure"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Introduction of verification_context which indicates if the previous\nrevision has signature or witness data, or if the current revision\nhas transcluded resources. This will build the correct verification\nstructure before verification."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Change in the data-structure:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"when requesting a revision this is done via the\nGetRevisionHandler.php"}),"\n",(0,t.jsx)(n.li,{children:"the previous verification hash is always served as well"}),"\n",(0,t.jsx)(n.li,{children:"if signature or witness data is present in the previous revision,\nthere is a flag (1/0) that this revision depends on the previous\nrevision"}),"\n",(0,t.jsx)(n.li,{children:"transcluded resources will be added to the content hash for\nverification"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"data-accounting-protocol-v12-tbd",children:"Data Accounting Protocol v1.2 [TBD]"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Generalization of the Signature-Metadata to inform which signature\nmethod was used.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"GPG Signatures"}),"\n",(0,t.jsx)(n.li,{children:"BTC Wallet Signatures"}),"\n",(0,t.jsx)(n.li,{children:"Ethereum Wallet Signatures"}),"\n",(0,t.jsx)(n.li,{children:"Done by: Displaying method used for signing, displaying\nunderlying architecture."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Including Account as part of the verified data structure"}),"\n",(0,t.jsx)(n.li,{children:"Defining maximum payload size per revision"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"services-on-aqp-not-yet-implemented-exploration",children:"Services on AQP (Not yet implemented, exploration)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["AQP-DACS: ",(0,t.jsx)(n.a,{href:"#domain",children:"Domain"})," Access Control System"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["See: ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/guardian",children:"Guardian"})," (Acting similar to a WebApplication-Firewall)"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"ANS: Name-System and Name-Registry."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/aqua-name-resolution",children:"Aqua Name Resolution"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["AQP-SSI: Self-Sovereign-Identity Protocol for ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/aqua-identity-protocol#self-issued-identity-claims",children:"Identity\nClaim"})," management"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/aqua-identity-protocol",children:"Aqua Identity Protocol"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"AQP Delegated Witnessing"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["See ",(0,t.jsx)(n.a,{href:"/docs/next/protocol/delegated-witnessing",children:"Delegated Witnessing"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"similar-projects",children:"Similar Projects"}),"\n",(0,t.jsx)(n.p,{children:"None of the listed projects apply the concepts of versioning to their documents,\nthe concept of portable hash chains, the concept of personal data vaults for data\nmanagement in comparison with the AQP reference implementation."}),"\n",(0,t.jsx)(n.p,{children:"This following list is not exhaustive:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"http://surety.com/",children:"Surety"}),"\nThe oldest blockchain-like timestamping service which has been publishing\nto the New York Times since 1995."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://opentimestamps.org/",children:"OpenTimestamp"}),"\nA free and open-source service provided by Peter Todd using the Bitcoin\nnetwork as a distributed cryptographic clock. The AQP MAY use OpenTimestamp\nas a witness network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://originstamp.com/",children:"OriginStamp"}),"\nA company providing paid timestamping services for their customers.\nIt looks very similar to OpenTimestamps with open-source client libraries."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.factomprotocol.org/",children:"Factom Protocol"}),"\nA service which creates an architecture with an extra layer of blockchain,\nto provide an extra layer of trusted parties while providing their own\ntoken. In our opinion, it introduces unnecessary complexity and\nintermediaries as dependencies compared to the AQP."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.openattestation.com/",children:"OpenAttestation"}),"\nAn implementation of a timestamping service for document certification. One\napplication of it is for secure digital vaccination certificates by the\nSingaporean government. They use the MetaMask Ethereum wallet for signing\ndocuments making it the most similar project to AQP to our knowledge."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"blockchain-context",children:"Blockchain Context"}),"\n",(0,t.jsx)(n.p,{children:"DISCLAIMER: AQP is not a permissionless distributed ledger. In order for the\nAQP to be valuable and working, a single node implementation and single node\ndeployments are sufficient, and do not require the witnessing part. The AQP MAY\nbenefit from being published to a distributed ledger technology (DLT)) to\nachieve a witness event with high transaction security. AQP does not have a\ntoken nor is it distributing data by default."}),"\n",(0,t.jsx)(n.p,{children:"As some concepts are very similar as those used in DLT's, please refer to the\nfollowing:"}),"\n",(0,t.jsx)(n.p,{children:"A portable hash chain and its revisions are similar to a blockchain structure\nand its blocks, which has its own root hash and a set of transactions which\nare included inside."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Blockchain Term"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"AQP Term"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Explanation"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Transaction"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Input Data"})}),(0,t.jsx)(n.td,{children:"In a blockchain, it's a signed transaction. In AQP, it's all the input data provided to calculate the respective content slot hashes."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Block"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Revision"})}),(0,t.jsx)(n.td,{children:"A block contains the Merklized list of transactions. A revision contains various hashed data inputs such as:"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"- Content slots"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"- Metadata data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"- Signature data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"- Witness data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Genesis Block"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Genesis Revision"})}),(0,t.jsx)(n.td,{children:"The first object in the hash chain/blockchain."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Blockchain"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Hash Chain"})}),(0,t.jsx)(n.td,{children:"The hash chain is not distributed but resides by default only in the local PKC. It is not a distributed ledger and lacks a consensus algorithm to create a shared truth between nodes."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"a-side-note",children:"A side note"}),"\n",(0,t.jsx)(n.p,{children:"It has not escaped our notice that the provided AQP improves the existing\nprocess of double-entry bookkeeping and provides a foundation for a new data\neconomy. This also allows to create unforgeable invoices which can be clearly\nattributed to its sender, avoiding fraud. This is one of many other use cases,\ne.g. providing trusted news via revision-controlled journalism."})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var a=i(6540);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);