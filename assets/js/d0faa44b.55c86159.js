"use strict";(self.webpackChunkaqua_docs_v_2=self.webpackChunkaqua_docs_v_2||[]).push([[1301],{6818:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"protocol/delegated-witnessing","title":"Delegated Witnessing","description":"Describes the process of sending domain snapshots to remote data vaults.\\n","source":"@site/docs/protocol/delegated-witnessing.md","sourceDirName":"protocol","slug":"/protocol/delegated-witnessing","permalink":"/docs/next/protocol/delegated-witnessing","draft":false,"unlisted":false,"editUrl":"https://github.com/inblockio/docs/protocol/delegated-witnessing.md","tags":[],"version":"current","frontMatter":{"title":"Delegated Witnessing","linkTitle":"Delegated Witnessing","weight":7,"description":"Describes the process of sending domain snapshots to remote data vaults.\\n"},"sidebar":"tutorialSidebar","previous":{"title":"Aqua Protocol Version 1.2","permalink":"/docs/next/protocol/aqua_protocol_v1_2"},"next":{"title":"Design Principles","permalink":"/docs/next/protocol/design-principles"}}');var o=n(4848),i=n(8453);const a={title:"Delegated Witnessing",linkTitle:"Delegated Witnessing",weight:7,description:"Describes the process of sending domain snapshots to remote data vaults.\n"},r=void 0,c={},d=[];function l(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,o.jsx)(t.p,{children:"Describes the process of sending a domain snapshot to a remote data vault for\nwitnessing. The domain snapshot is then included in the witnessing event and\nsent back to its original data vault. This makes the domain snapshot behave\nlike an ordinary portable hash chain that can be witnessed. The relative path\nof the Merkle proof is used as a prefix for all other included portable hash\nchains included in the domain snapshot."})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(6540);const o={},i=s.createContext(o);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);