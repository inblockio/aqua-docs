"use strict";(self.webpackChunkaqua_docs_v_2=self.webpackChunkaqua_docs_v_2||[]).push([[9048],{2904:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"protocol/guardian","title":"Guardian","description":"Shows access and transport layer logic used to interconnect data vaults\\n","source":"@site/docs/protocol/guardian.md","sourceDirName":"protocol","slug":"/protocol/guardian","permalink":"/docs/next/protocol/guardian","draft":false,"unlisted":false,"editUrl":"https://github.com/inblockio/docs/protocol/guardian.md","tags":[],"version":"current","frontMatter":{"title":"Guardian","linkTitle":"Guardian","weight":9,"description":"Shows access and transport layer logic used to interconnect data vaults\\n"},"sidebar":"tutorialSidebar","previous":{"title":"Design Principles","permalink":"/docs/next/protocol/design-principles"},"next":{"title":"Immutable Hyperlinks","permalink":"/docs/next/protocol/immutable-hyperlinks"}}');var a=i(4848),s=i(8453);const r={title:"Guardian",linkTitle:"Guardian",weight:9,description:"Shows access and transport layer logic used to interconnect data vaults\n"},o="Context",c={},l=[{value:"How",id:"how",level:2},{value:"<strong>Permission Agreements</strong> / Data Usage Agreement / Access Rights",id:"permission-agreements--data-usage-agreement--access-rights",level:2},{value:"Domain Handshake",id:"domain-handshake",level:2},{value:"Example: Sharing a File",id:"example-sharing-a-file",level:2},{value:"Specifications:",id:"specifications",level:3},{value:"Web (HTTPS / DNS) Integration Goal: Have a",id:"web-https--dns-integration-goal-have-a",level:2},{value:"Ethereum Node",id:"ethereum-node",level:2},{value:"Matrix Node Handler",id:"matrix-node-handler",level:3},{value:"Matrix-BOT",id:"matrix-bot",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"context",children:"Context"})}),"\n",(0,a.jsx)(n.p,{children:"It is highly problematic to expose sensitive data, such as personal\nidentifiable data, to the internet. The service who hosts that sensitive\ndata, needs to be compromised only for a short amount of time, to leak\nall the data. Often caused by configuration mistakes or by\nvulnerabilities being present in the used technology stack."}),"\n",(0,a.jsx)(n.p,{children:"We can't effort to have leaks on personal-identifiable data in data\nvaults. To raise the bar on making attacks difficult and reducing the\nchance of leakage of information, we introduce the Guardian as a extra\nsecurity layer to protect services like the PKC from attacks."}),"\n",(0,a.jsx)(n.h1,{id:"summary",children:"Summary"}),"\n",(0,a.jsx)(n.p,{children:"The Guardian is a software which manages the boundaries of your digital\ndomain. Guardians are used to connect to secure transport networks\n(HTTPS, Matrix Network, Didcomm) and publishing networks (e.g.\nSwarm.eth). The Guardian is used to build trusted connections to other\nGuardians via trusted transport-layers to exchange data with them. As\nthe Guardian connects to other Guardians, it also manages all\nconnections to services in it's domain and access to those services."}),"\n",(0,a.jsx)(n.h1,{id:"goal",children:"Goal"}),"\n",(0,a.jsx)(n.p,{children:"Secure all services behind the Guardian from attacks and unauthorized\naccess. Keep the data vault and it's data private and safe, while\nenabling the ability to exchange data with other Guardians."}),"\n",(0,a.jsx)(n.h2,{id:"how",children:"How"}),"\n",(0,a.jsx)(n.p,{children:"Enforcement is handled on each connection and each data set so that\nservices behind the Guardian are never directly exposed. This makes the\nGuardian the most security sensitive component in the Aqua reference\nimplementation, as we expect the Guardian to handle all incoming and\noutgoing traffic. The Guardian enjoys additional attention and effort to\nbe up to it's task by hardening it and applying security best practices\nto ensure that it is fulfilling it's security promise to keep services\nbehind the Guardian safe."}),"\n",(0,a.jsx)(n.p,{children:"Every transaction leaving or wanting to enter your domain will be\nsupervised and checked by the Guardian. The core functionality of the\nGuardian is a library to verify the Aqua Protocol. Only if the\nverification succeeds additional steps are introduced to make decisions\nhow the data is handled."}),"\n",(0,a.jsx)(n.p,{children:"This allows the Guardian to read and understand Aqua verified data. This\nallows for the implementation of a wide set of behavioral rules and\noffers the opportunity to create various 'Smart contract' languages on\ntop of it."}),"\n",(0,a.jsx)(n.p,{children:"The Guardian verifies a file, reads its contents and checks it's\npermissions to classify if an action is considered legal or illegal,\npermitted or denied. Basic functionality for a Guardian can be compared\nwith a traditional firewall, or a application firewall but is much more\nsophisticated to manage access on the data-level."}),"\n",(0,a.jsx)(n.h1,{id:"terminology",children:"Terminology:"}),"\n",(0,a.jsx)(n.p,{children:"Proving ownership over a domain by signing the domain ID with an\nself-issued identity claim which is also registered in a claim registry\nto ensure nobody claims to have owned that domain before by manipulating\nthe digital clock and faking an earlier owner-ship claim over the\ndomain."}),"\n",(0,a.jsxs)(n.h2,{id:"permission-agreements--data-usage-agreement--access-rights",children:[(0,a.jsx)(n.strong,{children:"Permission Agreements"})," / Data Usage Agreement / Access Rights"]}),"\n",(0,a.jsx)(n.p,{children:"are contracts which represent the terms and conditions under which files\nand/or services are shared with other accounts and/or their digital\ndomains."}),"\n",(0,a.jsx)(n.p,{children:"By nature those Permission Agreements will be compiled through pages and\nstored as files. To form an agreement, the other party must be notified\nabout new resources as they become available. For example, when we share\na page with another account. To complete a permission agreement, the\ncounter party has to sign the permission agreement or reject it. If the\npermission agreement is signed, the other party enters a contractual\nrelationship in which they will be liable for any agreement violates\nexecuted from their digital domain."}),"\n",(0,a.jsx)(n.h1,{id:"processes",children:"Processes"}),"\n",(0,a.jsx)(n.h2,{id:"domain-handshake",children:"Domain Handshake"}),"\n",(0,a.jsx)(n.p,{children:"Establish trust between two Aqua domains. For this we have Alice and Bob which\nwant to establish trust between their domains. They both have a Guardian in\nplace to protect their data vaults."}),"\n",(0,a.jsx)(n.p,{children:"Steps:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Alice: Create access contract: I ",(0,a.jsx)(n.code,{children:"<Alice_account>"})," want to connect from my ",(0,a.jsx)(n.code,{children:"<domain_id>"})," to a ",(0,a.jsx)(n.code,{children:"<domain_id>"})," controlled by ",(0,a.jsx)(n.code,{children:"<Bobs_account>"})," with my ",(0,a.jsx)(n.code,{children:"<Alice_domain_id>"})," via the following channel: DNS/HTTPS via ",(0,a.jsx)(n.code,{children:"alice_Guardian.domain.com"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Alice: sign contract"}),"\n",(0,a.jsx)(n.li,{children:"Alice: SEND contract send the page via 'mail' / 'matrix' whatever to the remote PKC instance."}),"\n",(0,a.jsx)(n.li,{children:"Bob: veries the contract contract and imports it"}),"\n",(0,a.jsxs)(n.li,{children:["Bob: extend contract: I ",(0,a.jsx)(n.code,{children:"<bobs_account>"})," connect my PKC ",(0,a.jsx)(n.code,{children:"<bobs_domain_id>"})," to your PKC ",(0,a.jsx)(n.code,{children:"<Alice_domain_id>"})," via my Guardian_endpoint ",(0,a.jsx)(n.code,{children:"<bobs_guardian.domain2.com>"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Bob: sign extended contract: Bob uses his wallet to sign his extended contract."}),"\n",(0,a.jsx)(n.li,{children:"Bob: send extended contract TO Alice: Bob sends his Contract to his Guardian."}),"\n",(0,a.jsx)(n.li,{children:"Bob's Guardian: Verifies and sends the contract to Alice Guardian."}),"\n",(0,a.jsx)(n.li,{children:"Alice Guardian:\nGuardian verifies all data\nSends OK back to Bob's Guardian\nSends Updates contract into Alice PKC\nWaits for Bob's Guardian to request available pages"}),"\n",(0,a.jsx)(n.li,{children:"Bob's Guardian requests a list of pages: ' What pages do you share with me?'"}),"\n",(0,a.jsx)(n.li,{children:"Alice Guardian: Returns list of accessible resources for Bob"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"example-sharing-a-file",children:"Example: Sharing a File"}),"\n",(0,a.jsx)(n.p,{children:"Target: Sharing a file with another account. Using two Aqua data vaults\nwith their two Guardians to manage access to them. We assume the\nGuardians already have executed a handshake to enter a trusted\nrelationship. We also assume, that the file should underlay access\nbasedon account restrictions and domain restrictions."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Example 1:"})," Sharing a file ",(0,a.jsx)(n.strong,{children:"without additional"})," constrains with\nanother account."]}),"\n",(0,a.jsx)(n.p,{children:"Alice wants to share her page 'My secret research' with Bob. Their\nGuardians have already formed a trusted connection. What Alice needs to\ndo now is to add a sub-page with an immutable link under the 'My secret\nresearch' page and define access. To be able to define access Alice\nneeds to have a claim over the ownership over the domain she is sharing\nfrom."}),"\n",(0,a.jsx)(n.p,{children:"Alice creates an Access Permission for the whole page or for a single\nrevision by creating a page with the following syntax:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"<genesis_hash>"}),":access_contract"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"To give access to the whole page with all it's revisions."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"<revision_hash>"}),":access_contract"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"To give access to a specific revision."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Content of the page:"})}),"\n",(0,a.jsxs)(n.p,{children:["I Alice ",(0,a.jsx)(n.code,{children:"<alice-account>"})," give access to Bob ",(0,a.jsx)(n.code,{children:"<bob-account>"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["option 1: to the whole page including it's history ",(0,a.jsx)(n.code,{children:"<genesis_hash>"})]}),"\n",(0,a.jsxs)(n.li,{children:["option 2: to the following revision ",(0,a.jsx)(n.code,{children:"<revision_hash>"}),"'My secret\nresearch'"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Additional one-sided conditions:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"This access contract expires in 7 days"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["This contract will come into place with my ",(0,a.jsx)(n.code,{children:"<alice-account>"})," signature."]}),"\n",(0,a.jsx)(n.p,{children:"The Guardian will react to a specific syntax of pages holding contracts,\nagreements and access rights to adjust his network access rights\naccordingly to it. Alice-Guardian will respond to the question what\nresources are shared by Bobs-Guardian with the answer that there is a\nnew page available according to the access contract which now gives\nBobs-Guardian the ability to query the content of 'My secure research'\nfrom Alice according to the contract. Depending on Bobs-Guardian\nsetting, the Guardian might automatically load the resource and forward\nit into the post-box of Bobs Data Vault."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Example 2:"})," Sharing a file ",(0,a.jsx)(n.strong,{children:"with"})," constrains forming a ",(0,a.jsx)(n.strong,{children:"contract"}),"\nto do so."]}),"\n",(0,a.jsx)(n.p,{children:"Same as 1 expect that for the contract to come into place, Bob needs to\nsign the contract from Alice containing additional constrains."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Content of the page:"})}),"\n",(0,a.jsxs)(n.p,{children:["I Alice ",(0,a.jsx)(n.code,{children:"<alice-account>"})," give access to Bob ",(0,a.jsx)(n.code,{children:"<bob-account>"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["option 1: to the whole page including it's history ",(0,a.jsx)(n.code,{children:"<genesis_hash>"})]}),"\n",(0,a.jsxs)(n.li,{children:["option 2: to the following revision ",(0,a.jsx)(n.code,{children:"<revision_hash>"}),"'My secret\nresearch'"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Under the following conditions:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Do not share outside your domain ",(0,a.jsx)(n.code,{children:"<Bobs-domain_id>"})]}),"\n",(0,a.jsx)(n.li,{children:"Do not share with any body else (Bobs domain can't have another\naccount registered to it, if there is an account registered the\nGuardian of Bob will say that Bobs domain does not fulfill the\nrequirements to establish this contract."}),"\n",(0,a.jsx)(n.li,{children:"Do not modify it."}),"\n",(0,a.jsx)(n.li,{children:"Delete it after 7 days."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"For this contract to be valid, signatures of first Alice and then Bob\nneed to be present. This means, after Alice signed the access contract,\nthe contract is a new available resource to Bob to be loaded. Bob can\nnow sign the resource in his domain and return the contract. Leading to\nthe contract send back to Alice domain and being updated there. Bob now\ngets access to 'My secret research' which has been updated as well, to\ncontain via an immutable link the access contract."}),"\n",(0,a.jsx)(n.p,{children:"Permission Templates, Complex Permissions (Groups and more)"}),"\n",(0,a.jsx)(n.p,{children:"It is possible to apply complex permissions based on templates, or and\nconnecting multiple access contracts by using"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["instead of this syntax ",(0,a.jsx)(n.code,{children:"<genesis_hash>"}),":permission_agreement"]}),"\n",(0,a.jsxs)(n.li,{children:["the following the syntax ",(0,a.jsx)(n.code,{children:"<genesis_hash>"}),":",(0,a.jsx)(n.code,{children:"<genesis_hash-2>"})," in\nwhich the ",(0,a.jsx)(n.code,{children:"<genesis_hash-2>"})," contains a list of sub-pages with access\ncontracts which can be used to apply access via permission-objects\nwhich are represented by the ",(0,a.jsx)(n.code,{children:"<genesis_hash-2>"})," page object."]}),"\n"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Alice wants to"}),"\n",(0,a.jsx)(n.li,{children:"If the user wants to propose changes to the page, he will send an\nupdated PAGE FILE to the OWNER of the PAGE."}),"\n",(0,a.jsx)(n.li,{children:"The owner can decide to ACCEPT the changes. Or to include the\nchanges in the HISTORY File, but not COMMIT them. Or to NOT include\nthe update of the PAGE, and disregard it."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"specifications",children:"Specifications:"}),"\n",(0,a.jsx)(n.p,{children:"The Guard Daemon checks if there is digital contract present in his\ndomain. Those contracts set permissions for allowing a counter party to\naccess a service or resource (like a file or a page, or a revision).\nIt's also defining the constrains under which permissions access is\ngiven. In this case it requires the digital signature of the receiving\nparty for the agreement to come into place and be valid."}),"\n",(0,a.jsx)(n.p,{children:"Guardians have administrative access to the services they manage.\nTherefore they can supervise the activities of services and use them as\ntriggers to e.g. provide access according to a set permission without\nadditional user action."}),"\n",(0,a.jsx)(n.h1,{id:"guardian-components",children:"Guardian Components:"}),"\n",(0,a.jsx)(n.p,{children:"APIs"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"System-API to control a service via a service specific library. Each\nservices will have their own control-library and control API to\ncreate an abstraction layer which allows for a unified control logic\nin the Guardian."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"E.g. an account is allowed to access a service"}),"\n",(0,a.jsx)(n.li,{children:"E.g. a resource is shared with an account"}),"\n",(0,a.jsx)(n.li,{children:"E.g. a trust relationship between two services is established\n(based on an agreement between two accounts) to exchange data"}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Implementation Specific PKC:"})," All interactions for system\ninteraction with MediaWiki / PKC","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Execute Actions: Move, Update, Edit, Delete Pages"}),"\n",(0,a.jsx)(n.li,{children:"Request send to the Guardian: Verify a specific page or a\nlist of pages"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Data-API"})," to retrieve Aqua-Data between a service and the\nGuardian, or between two Guardians."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Send data to import API"}),"\n",(0,a.jsxs)(n.li,{children:["Read data via export API","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Implementation Specific PKC:"})," Read special Pages used to\ngive access e.g. Data Usage Agreements, Permission\nAgreements"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Aqua Verification Library"})," to be able to verify incoming and\noutgoing data"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"implementation of the 'external-verifier' in e.g. GO, Typescript\nor Javascript (current)"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Account-Registry (Holding the list of trusted keys and the\nrelationship between them)"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"This includes defined 'trusted accounts'"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Session-Handler/Registry (Acts like Stateful-Firewall on the\npage-object level to mange imports / exports). The Guardian verifies\nincoming and outgoing data and constructs sessions based on it."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Guardian Policies: Are sets of rules followed and enforced by the\nGuardian. This includes set of rules used to protect the domain from\nunauthorized operations and access. Part of that are page access\npermissions which are managed by the ",(0,a.jsx)(n.a,{href:"Data_Usage_Agreement",title:"wikilink",children:"Data Usage\nAgreements"}),"."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<domain_id><account><genesis_hash><revision_hash>"}),":",(0,a.jsx)(n.code,{children:"<domain_id><account><genesis_hash><revision_hash>"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Transport Layer API's / Sub-Modules for connectivity to distributed\nservices"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The Guardian-to-Guardian communication handler (via DNS/HTTPS\ntransport)"}),"\n",(0,a.jsx)(n.li,{children:"Ethereum Integration, Ethereum Handler (As a witness Network)"}),"\n",(0,a.jsx)(n.li,{children:"Matrix Integration, Matrix Handler (As a restrictive/\npermissioned transport layer)"}),"\n",(0,a.jsx)(n.li,{children:"Schwarm Integration, Swarm Handler (As a publishing network)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h1,{id:"guardian-integration-services",children:"Guardian-Integration-Services"}),"\n",(0,a.jsx)(n.p,{children:"The Guardian has a modular design to support integration with many services and\ntransport layers."}),"\n",(0,a.jsx)(n.h2,{id:"web-https--dns-integration-goal-have-a",children:"Web (HTTPS / DNS) Integration Goal: Have a"}),"\n",(0,a.jsx)(n.p,{children:"handler to connect web-facing Guardians with each other in a safe way. Be able\nto run guardian procedures via two public Facing guardians which use a public\nDNS name and HTTPS to interconnect with each other. Guardian procedures are:\nGuardian handshakes to establish trust or remove trust Request or Send portable\nHash-Chains based on access rights between each other"}),"\n",(0,a.jsx)(n.h2,{id:"ethereum-node",children:"Ethereum Node"}),"\n",(0,a.jsxs)(n.p,{children:["Integration Goal: Connect to a self-hosted or remote Ethereum Node. Option 1:\nConfiguration via Alchemy (Providing Keys) via Special",":DataAccountingConfig","\nOption 2: Implementation of Ethereum Node via ./setup --ethereum-node (provide\ncontainer) Configuration of Connection to RPC Ethereum node via address (if in\nsame network) The Wallet can be directly be connected to a local Ethereum node\nvia RPC to avoid meta-data gathering of large providers, like INFURA which\ncould potential track which IP address has created which Ethereum Transaction\nwith which Metamask-Wallet, leading to a de-pseudonymousation of the user. ###\nEthereum Node Handler Goal: Accelerate lookups of the Guardian via caching\nEvery-time a witness contract is called, the Ethereum Node Handler will start\nto cache the all Ethereum-Witness events of that Witness-Contract and Index\nthem in it's database. This will reduce access times to ms vs potential seconds\nin lookup times, making the Guardian more performant and responsive. ## Matrix\nNode Integration Goal: Connect to a self-hosted or remote synapse-server\n(MATRIX) Node. Configure a remote matrix server or a local one via Guardian.\nImplementation of Matrix-Node deployment via ./pkc setup --matrix-node (provide\ncontainer)."]}),"\n",(0,a.jsx)(n.h3,{id:"matrix-node-handler",children:"Matrix Node Handler"}),"\n",(0,a.jsx)(n.p,{children:"Context: We use Ethereum Wallets as Identity-Anchors as they are globally\nunique addresses (which are collision free) broadly adopted with supported\nhardware ledgers as secure hardware elements with an existing fast moving\necosystem for further development. They act as 'web-based' PGP-like utilities\nwhich do not need any Blockchain-Interaction for Signing messages and can be\nused as a valuable off-line capable identity anchor. With this step we separate\nIdentity and Service; even in case of compromising the computer of the user or\nby having a breach of secrets in the Element-Client the Identity would be safe\n(in case a hardware wallet would be used). This also drastically reduces attack\nsurface to phish a users credentials; as there is no Password-Login there is no\nway to steal the password to impersonate the user. All security assumptions of\nthe User-Identity come back to the security of his private key. For the\nKolibri/PKC project this is the foundation for using wallet-addresses as\nIdentities to route traffic with matrix bots between PKC's. The following\nactions are required to use the Ethereum Wallet as a strong Identity Anchor\nwithin Matrix."}),"\n",(0,a.jsx)(n.p,{children:"This requires the following functionality:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Register the user via an Ethereum wallet address (successfully piloted by inblockio)"}),"\n",(0,a.jsx)(n.li,{children:"Detect that it is an Ethereum Wallet-Address; Verify integrity of address with the Ethereum Wallet-Address Checksum (TBD)"}),"\n",(0,a.jsx)(n.li,{children:"Make username not changeable (Done via Matrix settings,successfully piloted by inblockio)"}),"\n",(0,a.jsx)(n.li,{children:"Wallet login with Web-Wallet Metamask via OIDC (Open ID Connect) (successfully Piloted by inblockio)"}),"\n",(0,a.jsx)(n.li,{children:"Verify Ownership of the Wallet by doing an Element-Client side Signature Challenge to the User. Challenge resolved by signing a message with sufficient entropy to not be ever the same (to protect against leakage) with the private key via the Ethereum\nMetamask Webwallet (or a connected Hardware-Wallet)"}),"\n",(0,a.jsx)(n.li,{children:"Implement a User-to-User request of proof of Identity Users / Server can challenge other users to proof that they hold the private Wallet-Key by triggering the Signature Challenge to the User; After the challenge is done, the requested party is provided with all information to do a manual verification of the signature (the Message which was\nSigned, the Signature, the used method used for the signature)"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"matrix-bot",children:"Matrix-BOT"}),"\n",(0,a.jsx)(n.p,{children:"Context: The Matrix-Network communicates with the PKC through the Guardian who\nwill manage all access to the MediaWiki service. The Guardian uses a Matrix-Bot (to\nhandle the communication) and a Matrix-Integration (to be flexible to use a\nprivate synapse or a remote synapse server) to interact with the Matrix Network\nas a permissioned transport layer."}),"\n",(0,a.jsx)(n.p,{children:"Referenz-Implementation:\nSuitable options for a matrix-integration are 'go-lang' or 'rust'. Guardian\nnext generation Guardian will be written in Rust, so integration of security\nrelevant components would be preferably in Rust and Webassambly. A central\npoint to configure the guardian to connect to matrix and other services needs\nto be provided. The matrix server is connected to the guardian with a service\nbot which is able to open rooms to exchange revisions between PKC\u2019s."}),"\n",(0,a.jsx)(n.p,{children:"Required Functionality of the Matrix-Bot:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"open new room for user (required) - to share resource invite / remove other\nusers to/ from room (required) - to set permissions who can read"}),"\n",(0,a.jsx)(n.li,{children:"shared resource close room (required) - after resource share is revoked join a\nroom the user is invited too (by other matrix-bot)\n*'accept invite' check for\nchallenge (provided via text from remote Guardian), leave room if challenge is\nfaulty and block user (required) delete? room / delete history?\nNote: Use matrix only as channel not as storage (optional) preferably the\nhistory of the channel is not kept"}),"\n",(0,a.jsx)(n.li,{children:"post content of (mediawiki API query results from the Guardian) into a room"}),"\n",(0,a.jsx)(n.li,{children:"(required) read content of room (send it to the Guardian for verification,\nbefore it's send to the import API) (required)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(6540);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);