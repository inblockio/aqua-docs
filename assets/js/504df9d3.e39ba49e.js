"use strict";(self.webpackChunkaqua_docs_v_2=self.webpackChunkaqua_docs_v_2||[]).push([[3364],{5597:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"sdk/core-concepts","title":"Core Concepts","description":"Aqua Tree Structure","source":"@site/versioned_docs/version-1.3.2/sdk/core-concepts.md","sourceDirName":"sdk","slug":"/sdk/core-concepts","permalink":"/docs/v3/sdk/core-concepts","draft":false,"unlisted":false,"editUrl":"https://github.com/inblockio/versioned_docs/version-1.3.2/sdk/core-concepts.md","tags":[],"version":"1.3.2","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/v3/sdk/getting-started"},"next":{"title":"Signing","permalink":"/docs/v3/sdk/api/signing"}}');var r=i(4848),t=i(8453);const l={},c="Core Concepts",o={},d=[{value:"Aqua Tree Structure",id:"aqua-tree-structure",level:2},{value:"Signature System",id:"signature-system",level:2},{value:"1. CLI Signing",id:"1-cli-signing",level:3},{value:"2. DID Signing (Decentralized Identifier)",id:"2-did-signing-decentralized-identifier",level:3},{value:"3. MetaMask Signing",id:"3-metamask-signing",level:3},{value:"Witness System",id:"witness-system",level:2},{value:"1. Ethereum Witnessing",id:"1-ethereum-witnessing",level:3},{value:"2. Nostr Witnessing",id:"2-nostr-witnessing",level:3},{value:"3. Time Stamp Authority (TSA)",id:"3-time-stamp-authority-tsa",level:3},{value:"Common Features Across Systems",id:"common-features-across-systems",level:2},{value:"Signing Features",id:"signing-features",level:3},{value:"Witnessing Features",id:"witnessing-features",level:3},{value:"Operation Flow",id:"operation-flow",level:2},{value:"Best Practices",id:"best-practices",level:2}];function a(n){const e={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"core-concepts",children:"Core Concepts"})}),"\n",(0,r.jsx)(e.h2,{id:"aqua-tree-structure",children:"Aqua Tree Structure"}),"\n",(0,r.jsx)(e.p,{children:"The Aqua Protocol uses a specialized tree structure (AquaTree) to maintain the history and verification state of files. Each tree contains:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"File metadata"}),"\n",(0,r.jsx)(e.li,{children:"Revision history"}),"\n",(0,r.jsx)(e.li,{children:"Signatures"}),"\n",(0,r.jsx)(e.li,{children:"Witness records"}),"\n",(0,r.jsx)(e.li,{children:"Verification proofs"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"signature-system",children:"Signature System"}),"\n",(0,r.jsx)(e.p,{children:"The SDK supports three distinct signing methods:"}),"\n",(0,r.jsx)(e.h3,{id:"1-cli-signing",children:"1. CLI Signing"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Uses ethers.js HDNodeWallet for secure message signing"}),"\n",(0,r.jsx)(e.li,{children:"Ideal for automated or server-side operations"}),"\n",(0,r.jsx)(e.li,{children:"Simple and direct signing process"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"2-did-signing-decentralized-identifier",children:"2. DID Signing (Decentralized Identifier)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Implements DID-based signing using key-did-provider-ed25519"}),"\n",(0,r.jsx)(e.li,{children:"Supports Ed25519 signatures"}),"\n",(0,r.jsx)(e.li,{children:"Verifiable through key-did-resolver"}),"\n",(0,r.jsx)(e.li,{children:"Handles JSON Web Signatures (JWS)"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"3-metamask-signing",children:"3. MetaMask Signing"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Supports both browser and Node.js environments"}),"\n",(0,r.jsx)(e.li,{children:"Browser: Direct MetaMask integration"}),"\n",(0,r.jsx)(e.li,{children:"Node.js: Local server for MetaMask interaction"}),"\n",(0,r.jsx)(e.li,{children:"Features automatic environment detection"}),"\n",(0,r.jsx)(e.li,{children:"Includes public key recovery from signatures"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"witness-system",children:"Witness System"}),"\n",(0,r.jsx)(e.p,{children:"The SDK implements three distinct witnessing methods:"}),"\n",(0,r.jsx)(e.h3,{id:"1-ethereum-witnessing",children:"1. Ethereum Witnessing"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Supports both browser and Node.js environments"}),"\n",(0,r.jsx)(e.li,{children:"Uses MetaMask for transaction signing"}),"\n",(0,r.jsxs)(e.li,{children:["Features:","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Automatic environment detection"}),"\n",(0,r.jsx)(e.li,{children:"Local server for Node.js MetaMask interaction"}),"\n",(0,r.jsx)(e.li,{children:"Chain ID validation"}),"\n",(0,r.jsx)(e.li,{children:"Network switching support"}),"\n",(0,r.jsx)(e.li,{children:"Transaction status monitoring"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"2-nostr-witnessing",children:"2. Nostr Witnessing"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Implements Nostr protocol-based witnessing"}),"\n",(0,r.jsx)(e.li,{children:"Uses nostr-tools for protocol operations"}),"\n",(0,r.jsxs)(e.li,{children:["Features:","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Event creation and signing"}),"\n",(0,r.jsx)(e.li,{children:"Relay communication (damus.io)"}),"\n",(0,r.jsx)(e.li,{children:"Event verification"}),"\n",(0,r.jsx)(e.li,{children:"Timestamp validation"}),"\n",(0,r.jsx)(e.li,{children:"Cross-platform WebSocket handling"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"3-time-stamp-authority-tsa",children:"3. Time Stamp Authority (TSA)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Implements RFC 3161 Time-Stamp Protocol"}),"\n",(0,r.jsx)(e.li,{children:"Uses DigiCert TSA service"}),"\n",(0,r.jsxs)(e.li,{children:["Features:","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"ASN.1 encoding/decoding"}),"\n",(0,r.jsx)(e.li,{children:"SHA-256 hash verification"}),"\n",(0,r.jsx)(e.li,{children:"Timestamp extraction and validation"}),"\n",(0,r.jsx)(e.li,{children:"Base64 response handling"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"common-features-across-systems",children:"Common Features Across Systems"}),"\n",(0,r.jsx)(e.h3,{id:"signing-features",children:"Signing Features"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:'Standardized message format: "I sign this revision: [hash]"'}),"\n",(0,r.jsx)(e.li,{children:"Comprehensive signature verification"}),"\n",(0,r.jsx)(e.li,{children:"Return signatures with wallet/DID information"}),"\n",(0,r.jsx)(e.li,{children:"Error handling and validation"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"witnessing-features",children:"Witnessing Features"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Support for both witnessing and verification"}),"\n",(0,r.jsx)(e.li,{children:"Consistent timestamp handling"}),"\n",(0,r.jsx)(e.li,{children:"Environment-aware implementations"}),"\n",(0,r.jsx)(e.li,{children:"Comprehensive error handling"}),"\n",(0,r.jsx)(e.li,{children:"Synchronous and asynchronous operations"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"operation-flow",children:"Operation Flow"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"File Preparation"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Hash calculation"}),"\n",(0,r.jsx)(e.li,{children:"Metadata collection"}),"\n",(0,r.jsx)(e.li,{children:"Content processing (optional)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Tree Creation"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Genesis revision creation"}),"\n",(0,r.jsx)(e.li,{children:"File index management"}),"\n",(0,r.jsx)(e.li,{children:"Tree structure validation"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Signing Process"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Method selection (CLI/DID/MetaMask)"}),"\n",(0,r.jsx)(e.li,{children:"Signature generation"}),"\n",(0,r.jsx)(e.li,{children:"Public key recovery"}),"\n",(0,r.jsx)(e.li,{children:"Signature verification"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Witnessing Process"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Platform selection (Ethereum/Nostr/TSA)"}),"\n",(0,r.jsx)(e.li,{children:"Transaction/event creation"}),"\n",(0,r.jsx)(e.li,{children:"Proof generation"}),"\n",(0,r.jsx)(e.li,{children:"Status monitoring"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Verification"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Signature validation"}),"\n",(0,r.jsx)(e.li,{children:"Witness proof verification"}),"\n",(0,r.jsx)(e.li,{children:"Tree structure integrity check"}),"\n",(0,r.jsx)(e.li,{children:"Timestamp validation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Choose the Right Tools"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Use CLI signing for automation"}),"\n",(0,r.jsx)(e.li,{children:"Use MetaMask for interactive browser applications"}),"\n",(0,r.jsx)(e.li,{children:"Use DID for decentralized identity integration"}),"\n",(0,r.jsx)(e.li,{children:"Choose witnessing method based on security and speed requirements"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Error Handling"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Always check Result types for errors"}),"\n",(0,r.jsx)(e.li,{children:"Monitor witness transaction status"}),"\n",(0,r.jsx)(e.li,{children:"Validate signatures before witnessing"}),"\n",(0,r.jsx)(e.li,{children:"Keep track of operation logs"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Performance Optimization"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Enable scalar values when appropriate"}),"\n",(0,r.jsx)(e.li,{children:"Batch operations when possible"}),"\n",(0,r.jsx)(e.li,{children:"Use chainable API for cleaner code"}),"\n",(0,r.jsx)(e.li,{children:"Monitor gas costs for Ethereum operations"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Security Considerations"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Secure credential management"}),"\n",(0,r.jsx)(e.li,{children:"Validate file hashes"}),"\n",(0,r.jsx)(e.li,{children:"Verify signatures independently"}),"\n",(0,r.jsx)(e.li,{children:"Monitor witness network status"}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function l(n){const e=s.useContext(t);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),s.createElement(t.Provider,{value:e},n.children)}}}]);